QR Code Generator Service – Technical Documentation

Overview
This service enables generation of customized QR codes, with optional branding and preview, embedded as a dynamic UI (popup/modal) inside a parent application.
	•	Backend: Spring Boot
	•	Frontend: React (hosted separately or embedded)
	•	Integration: Popup in parent app with JWT-based session
	•	Deployment: Modular UI + API microservice

⸻

Architecture Diagram

+------------------------+       +---------------------------+       +---------------------------+
|   Parent Web App       | <---> |   QR Code UI (React)      | <---> |  QR Code API (Spring Boot)|
| (User Logged In + JWT) |       |   (Popup/iframe UI)       |       |   /api/qrcode/generate    |
+------------------------+       +---------------------------+       +---------------------------+

	•	JWT passed from Parent Web App → QR UI
	•	QR UI communicates securely with Spring Boot APIs
	•	QR generation happens server-side with ZXing, returning base64 or file

⸻

Project Structure

qr-service/
├── backend/
│   ├── controller/QRCodeController.java
│   ├── service/QRCodeService.java
│   ├── config/SecurityConfig.java
│   ├── model/QRCodeRequest.java
│   └── util/QRCodeUtil.java
├── frontend/ (built externally)
│   ├── App.jsx
│   └── QRForm.jsx
└── static/ (optional UI embed)


⸻

Session Management
	•	Auth Model: JWT Token passed from parent app to popup UI
	•	Token Transport:
	•	via query param (?token=xyz), OR
	•	via postMessage()
	•	Token Usage: React frontend attaches JWT in API requests:

fetch('/api/qrcode/generate', {
  method: 'POST',
  headers: {
    'Authorization': `Bearer ${token}`
  },
  body: formData
});

	•	Spring Security:

@Override
protected void configure(HttpSecurity http) throws Exception {
    http.csrf().disable()
        .authorizeRequests()
        .antMatchers("/api/qrcode/**").authenticated()
        .and()
        .addFilterBefore(jwtTokenFilter(), UsernamePasswordAuthenticationFilter.class);
}


⸻

QR Generation API

Endpoint:
POST /api/qrcode/generate

Request:

Content-Type: multipart/form-data

{
  "url": "https://example.com",
  "name": "Cafe 88",
  "headerText": "Welcome",
  "footerText": "Scan to Join",
  "bgColor": "#ffffff",
  "imageSize": 256,
  "logo": <file>,
  "backgroundImage": <file>
}

Response:

{
  "qrCodeBase64": "data:image/png;base64,..."
}


⸻

Deployment Notes
	•	Frontend can be deployed on Vercel, S3, or inside Spring Boot /static folder
	•	Backend should be served over HTTPS
	•	Ensure secure CORS and JWT expiration handling

⸻

Testing Scenarios
	•	Valid JWT with form data → returns QR code
	•	Expired/missing JWT → 401 error
	•	Custom header/footer rendering
	•	Uploading large files rejected with 50MB max

⸻

Future Enhancements
	•	Download QR code as PNG
	•	Audit trail for generated codes
	•	QR template presets
	•	Admin dashboard for QR code management

⸻

For any integration help or backend changes, contact the QR API service owner.


@startuml
title QR Code Generator Architecture

actor User

rectangle "Parent Web App\n(Session + Auth)" as WebApp {
    User --> WebApp : Logged in\nPasses JWT
}

rectangle "QR Code UI\n(React App as Popup)" as QRUI {
    WebApp --> QRUI : Pass JWT (postMessage or query param)
}

rectangle "QR Code API\n(Spring Boot)" as API {
    QRUI --> API : POST /api/qrcode/generate\n(with JWT)
}

API --> API : Generate QR (ZXing)\nReturn Base64 / PNG

@enduml




=LET(
  /* ---- Top band (rows 5–27) ---- */
  tnx_d, 'Dashboard'!B5:B27, tnx_c, 'Dashboard'!C5:C27, tnx_h, 'Dashboard'!D5:D27,
  bcore_d, 'Dashboard'!F5:F27, bcore_c, 'Dashboard'!G5:G27, bcore_h, 'Dashboard'!H5:H27,
  bcust_d, 'Dashboard'!J5:J27, bcust_c, 'Dashboard'!K5:K27, bcust_h, 'Dashboard'!L5:L27,
  bprod_d, 'Dashboard'!N5:N27, bprod_c, 'Dashboard'!O5:O27, bprod_h, 'Dashboard'!P5:P27,

  /* ---- Middle band (rows 28–53) ---- */
  btxn_d, 'Dashboard'!B28:B53, btxn_c, 'Dashboard'!C28:C53, btxn_h, 'Dashboard'!D28:D53,
  buser_d, 'Dashboard'!F28:F53, buser_c, 'Dashboard'!G28:G53, buser_h, 'Dashboard'!H28:H53,
  tcore_d, 'Dashboard'!J28:J53, tcore_c, 'Dashboard'!K28:K53, tcore_h, 'Dashboard'!L28:L53,
  tint_d, 'Dashboard'!N28:N53, tint_c, 'Dashboard'!O28:O53, tint_h, 'Dashboard'!P28:P53,

  /* ---- Lower band (rows 54–76) ---- */
  tpar_d, 'Dashboard'!B54:B76, tpar_c, 'Dashboard'!C54:C76, tpar_h, 'Dashboard'!D54:D76,
  tsec_d, 'Dashboard'!F54:F76, tsec_c, 'Dashboard'!G54:G76, tsec_h, 'Dashboard'!H54:H76,
  tutil_d, 'Dashboard'!J54:J76, tutil_c, 'Dashboard'!K54:K76, tutil_h, 'Dashboard'!L54:L76,
  bbat_d, 'Dashboard'!N54:N76, bbat_c, 'Dashboard'!O54:O76, bbat_h, 'Dashboard'!P54:P76,

  /* ---- Bottom band (rows 77–80) - adjust end row if you add more ---- */
  knox_d, 'Dashboard'!B77:B80, knox_c, 'Dashboard'!C77:C80, knox_h, 'Dashboard'!D77:D80,
  kman_d, 'Dashboard'!F77:F80, kman_c, 'Dashboard'!G77:G80, kman_h, 'Dashboard'!H77:H80,

  VSTACK(
    {"System","Date","Severity","Count"},

    /* Transnox */
    FILTER( HSTACK( IF(LEN(tnx_d),"Transnox",), tnx_d, IF(LEN(tnx_d),"Critical",), tnx_c ), LEN(tnx_d) ),
    FILTER( HSTACK( IF(LEN(tnx_d),"Transnox",), tnx_d, IF(LEN(tnx_d),"High",),     tnx_h ), LEN(tnx_d) ),

    /* busn-core */
    FILTER( HSTACK( IF(LEN(bcore_d),"busn-core",), bcore_d, IF(LEN(bcore_d),"Critical",), bcore_c ), LEN(bcore_d) ),
    FILTER( HSTACK( IF(LEN(bcore_d),"busn-core",), bcore_d, IF(LEN(bcore_d),"High",),     bcore_h ), LEN(bcore_d) ),

    /* busn-customer */
    FILTER( HSTACK( IF(LEN(bcust_d),"busn-customer",), bcust_d, IF(LEN(bcust_d),"Critical",), bcust_c ), LEN(bcust_d) ),
    FILTER( HSTACK( IF(LEN(bcust_d),"busn-customer",), bcust_d, IF(LEN(bcust_d),"High",),     bcust_h ), LEN(bcust_d) ),

    /* busn-product */
    FILTER( HSTACK( IF(LEN(bprod_d),"busn-product",), bprod_d, IF(LEN(bprod_d),"Critical",), bprod_c ), LEN(bprod_d) ),
    FILTER( HSTACK( IF(LEN(bprod_d),"busn-product",), bprod_d, IF(LEN(bprod_d),"High",),     bprod_h ), LEN(bprod_d) ),

    /* busn-transaction */
    FILTER( HSTACK( IF(LEN(btxn_d),"busn-transaction",), btxn_d, IF(LEN(btxn_d),"Critical",), btxn_c ), LEN(btxn_d) ),
    FILTER( HSTACK( IF(LEN(btxn_d),"busn-transaction",), btxn_d, IF(LEN(btxn_d),"High",),     btxn_h ), LEN(btxn_d) ),

    /* busn-user */
    FILTER( HSTACK( IF(LEN(buser_d),"busn-user",), buser_d, IF(LEN(buser_d),"Critical",), buser_c ), LEN(buser_d) ),
    FILTER( HSTACK( IF(LEN(buser_d),"busn-user",), buser_d, IF(LEN(buser_d),"High",),     buser_h ), LEN(buser_d) ),

    /* transit-core */
    FILTER( HSTACK( IF(LEN(tcore_d),"transit-core",), tcore_d, IF(LEN(tcore_d),"Critical",), tcore_c ), LEN(tcore_d) ),
    FILTER( HSTACK( IF(LEN(tcore_d),"transit-core",), tcore_d, IF(LEN(tcore_d),"High",),     tcore_h ), LEN(tcore_d) ),

    /* transit-integration */
    FILTER( HSTACK( IF(LEN(tint_d),"transit-integration",), tint_d, IF(LEN(tint_d),"Critical",), tint_c ), LEN(tint_d) ),
    FILTER( HSTACK( IF(LEN(tint_d),"transit-integration",), tint_d, IF(LEN(tint_d),"High",),     tint_h ), LEN(tint_d) ),

    /* transit-parent */
    FILTER( HSTACK( IF(LEN(tpar_d),"transit-parent",), tpar_d, IF(LEN(tpar_d),"Critical",), tpar_c ), LEN(tpar_d) ),
    FILTER( HSTACK( IF(LEN(tpar_d),"transit-parent",), tpar_d, IF(LEN(tpar_d),"High",),     tpar_h ), LEN(tpar_d) ),

    /* transit-security */
    FILTER( HSTACK( IF(LEN(tsec_d),"transit-security",), tsec_d, IF(LEN(tsec_d),"Critical",), tsec_c ), LEN(tsec_d) ),
    FILTER( HSTACK( IF(LEN(tsec_d),"transit-security",), tsec_d, IF(LEN(tsec_d),"High",),     tsec_h ), LEN(tsec_d) ),

    /* transit-utils */
    FILTER( HSTACK( IF(LEN(tutil_d),"transit-utils",), tutil_d, IF(LEN(tutil_d),"Critical",), tutil_c ), LEN(tutil_d) ),
    FILTER( HSTACK( IF(LEN(tutil_d),"transit-utils",), tutil_d, IF(LEN(tutil_d),"High",),     tutil_h ), LEN(tutil_d) ),

    /* busn-batch */
    FILTER( HSTACK( IF(LEN(bbat_d),"busn-batch",), bbat_d, IF(LEN(bbat_d),"Critical",), bbat_c ), LEN(bbat_d) ),
    FILTER( HSTACK( IF(LEN(bbat_d),"busn-batch",), bbat_d, IF(LEN(bbat_d),"High",),     bbat_h ), LEN(bbat_d) ),

    /* keynox */
    FILTER( HSTACK( IF(LEN(knox_d),"keynox",), knox_d, IF(LEN(knox_d),"Critical",), knox_c ), LEN(knox_d) ),
    FILTER( HSTACK( IF(LEN(knox_d),"keynox",), knox_d, IF(LEN(knox_d),"High",),     knox_h ), LEN(knox_d) ),

    /* keymanager */
    FILTER( HSTACK( IF(LEN(kman_d),"keymanager",), kman_d, IF(LEN(kman_d),"Critical",), kman_c ), LEN(kman_d) ),
    FILTER( HSTACK( IF(LEN(kman_d),"keymanager",), kman_d, IF(LEN(kman_d),"High",),     kman_h ), LEN(kman_d) )
  )
)
